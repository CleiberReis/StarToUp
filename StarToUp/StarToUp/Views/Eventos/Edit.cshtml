@model StarToUp.Models.Evento

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AreaAdmin.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Eventos", null, FormMethod.Post, new
{
    enctype =
"multipart/form-data"
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Evento</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EventoID)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    string foto = Model.Foto;
                    if (foto != string.Empty)
                    {
                        if (foto != null)
                        {
                            string file = foto;
                            string path =
                            System.Configuration.ConfigurationManager.AppSettings["PathWeb"] + "/Files/Evento/" + file;
                            <img class="img-responsive" src='@Url.Content(path)' title="Foto" />
                            @Html.ActionLink("Excluir", "DeleteFile", "Eventos", new { id = Model.EventoID, arquivo =
                            "Foto" }, null)
                        }
                        else
                        {
                            <div class="col-md-10">
                                <input type="file" name="foto" id="foto" class="input" placeholder="Foto *" />
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-md-10">
                            <input type="file" name="foto" id="foto" class="input" placeholder="Foto *" />
                        </div>
                    }
                    string str = ViewBag.FotoMensagem;
                    if (str != "")
                    {
                        <span class="text-danger contenterror">
                            @ViewBag.FotoMensagem
                        </span>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataEvento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataEvento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataEvento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
